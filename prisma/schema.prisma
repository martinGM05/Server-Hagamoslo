// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL2")
}

model Roles{
  id            Int         @id @default(autoincrement())
  rol           String
  Usuarios      Usuario[]
}

model Usuario{
  id            Int         @id @default(autoincrement())
  nombre        String
  correo        String      @unique
  contrasena    String
  urlFoto       String
  numero        String
  localizacion  String
  idRol         Int
  Rol           Roles       @relation(fields: [idRol], references: [id])
  descripcion   String?     @default("")
  valoracion    Int?        @default(0)
  tags          Servicio[]
  comentarioUsuario  ComentarioUsuario[]
  Contratado    ServicioContratado[] @relation("Trabajador")
  Solicitante   ServicioContratado? @relation("Usuario")
  Blog           Blog[]
  ComentarioBlog ComentarioBlog[]
}

model Blog{
  id            Int         @id @default(autoincrement())
  titulo        String
  descripcion   String
  idUsuario     Int
  Usuario       Usuario     @relation(fields: [idUsuario], references: [id])
  comentarioBlog ComentarioBlog[]
}

model ComentarioBlog{
  id            Int         @id @default(autoincrement())
  comentario    String
  idBlog        Int
  Blog          Blog        @relation(fields: [idBlog], references: [id])
  idTrabajador  Int
  Usuario       Usuario     @relation(fields: [idTrabajador], references: [id])
}

model Comentario{
  id            Int         @id @default(autoincrement())
  comentario    Json
  ComentarioUsuario ComentarioUsuario[]
}

model ComentarioUsuario{
  id            Int         @default(autoincrement())
  idUsuario     Int
  idComentario  Int
  Usuario       Usuario     @relation(fields: [idUsuario], references: [id])
  Comentario    Comentario  @relation(fields: [idComentario], references: [id])
  @@id([idUsuario, idComentario])
}

model ServicioContratado{
  id            Int         @id @default(autoincrement())
  idUsuario     Int
  Usuario       Usuario     @relation(name:"Usuario", fields: [idUsuario], references: [id])
  idTrabajador  Int
  Trabajador    Usuario     @relation(name:"Trabajador", fields: [idTrabajador], references: [id])
  descripcion   String      @db.VarChar(100)
  fechaInicio   DateTime    @default(now()) @db.Date
  fechaFin      DateTime    @updatedAt @db.Date
  estado        Boolean     @default(true)
  costo         Float
}


model Servicio{
  id            Int         @default(autoincrement())
  tag           Tag         @relation(fields: [idTag], references: [id])
  idTag         Int
  usuario       Usuario     @relation(fields: [idUsuario], references: [id])
  idUsuario     Int
  @@id([idTag, idUsuario])
}

model Tag{
  id            Int         @id @default(autoincrement())
  nombre        String
  icono         String
  usuarios      Servicio[]
}